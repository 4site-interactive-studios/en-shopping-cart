@function gift-box($color) {
  @return '<svg width="258" height="198" viewBox="0 0 258 198" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M123.163 8.96c.832 1.431 1.905 3.22 3.056 5.14a645.065 645.065 0 0 1 3.804 6.4h-23.77c-1.018-1.532-2.037-3.49-2.499-5.554-.575-2.57-.291-5.194 1.987-7.687 5.416-5.926 13.848-4.447 17.422 1.7z" stroke="#{$color}" stroke-width="7"/><path d="M135.837 8.96a479.216 479.216 0 0 1-3.056 5.14 645.065 645.065 0 0 0-3.804 6.4h23.77c1.018-1.532 2.037-3.49 2.499-5.554.575-2.57.291-5.194-1.987-7.687-5.416-5.926-13.848-4.447-17.422 1.7z" stroke="#{$color}" stroke-width="7"/><rect x="3.5" y="20.5" width="251" height="174" rx="12.5" stroke="#{$color}" stroke-width="7"/><path d="M118 20.5h-3.5v26.908l4.934-2.215L129 40.898l9.566 4.295 4.934 2.215V20.5H118z" stroke="#{$color}" stroke-width="7"/></svg>';
}

$fs-escape-chars: (
  " ": "%20",
  "'": "%22",
  '"': "%27",
  "#": "%23",
  "/": "%2F",
  ":": "%3A",
  "(": "%28",
  ")": "%29",
  "%": "%25",
  "<": "%3C",
  ">": "%3E",
  "\\":"%5C",
  "^": "%5E",
  "{": "%7B",
  "|": "%7C",
  "}": "%7D",
);

/**
 * Helper to get URL-escaped inline SVG code
 */
@function svg($color) {
  // Get icon data
  $svg-string: gift-box($color);

  $escaped-string: "";
  $unquote-svg: unquote($svg-string);
  // Loop through each character in string
  @for $i from 1 through str-length($unquote-svg) {
    $char: str-slice($unquote-svg, $i, $i);

    // Check if character is in symbol map
    $char-lookup: map-get($fs-escape-chars, $char);

    // If it is, use escaped version
    @if $char-lookup != null {
      $char: $char-lookup;
    }

    // Append character to escaped string
    $escaped-string: $escaped-string + $char;
  }

  // Return inline SVG data
  @return url("data:image/svg+xml, #{$escaped-string} ");
}

@mixin white-text {
  color: #fff;
  * {
    color: #fff !important;
    .decrease {
      background-image: url("data:image/svg+xml;charset=UTF-8, <svg width='30' height='30' viewBox='0 0 30 30' fill='none' xmlns='http://www.w3.org/2000/svg'><circle cx='15' cy='15' r='14.5' stroke='%23FFFFFF'/><rect x='11' y='15' width='8' height='2' fill='%23FFFFFF'/></svg>") !important;
    }
    .increase {
      background-image: url("data:image/svg+xml;charset=UTF-8, <svg width='30' height='30' viewBox='0 0 30 30' fill='none' xmlns='http://www.w3.org/2000/svg'><circle cx='15' cy='15' r='14.5' stroke='%23FFFFFF'/><rect x='11' y='15' width='8' height='1' fill='%23FFFFFF'/><rect x='15.5' y='11.5' width='8' height='1' transform='rotate(90 15.5 11.5)' fill='%23FFFFFF'/></svg>") !important;
    }
  }
}

@mixin theme(
  $name,
  $bg-color,
  $bg-amount-color,
  $border-selected-color,
  $white-text: false,
  $amount-white-text: false
) {
  .en__component:not(.en__component--formblock).bg-#{$name} {
    background-color: #{$bg-color};
    @if $white-text == false {
      .en__component--copyblock {
        color: #606062;
        * {
          color: #606062;
        }
      }
    } @else {
      @include white-text;
    }
  }
  .sc-cards,
  .sc-info {
    .bg-#{$name} {
      &[data-selected="true"] {
        border-color: #{$border-selected-color};
      }
      &::before {
        background-color: #{$bg-amount-color};
      }
      @if $amount-white-text == false {
        .sc-cards-amount * {
          color: #606062;
        }
      } @else {
        .sc-cards-amount * {
          color: #ffffff;
        }
      }
    }
  }
  .sc-info {
    &.bg-#{$name} {
      .gift-box-bold::before {
        @if $bg-amount-color != $bg-color {
          content: svg(#{$bg-amount-color});
        } @else {
          content: svg(#ffffff);
        }
      }
    }
    .text-#{$name},
    .text-#{$name} * {
      color: #{$bg-color} !important;
    }
  }
  .bg-#{$name} .en__submit button,
  .sc-mobile-checkout.#{$name} p {
    background-color: #{$bg-color};
    border-color: #{$bg-color};
    transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out,
      color 0.2s ease-in-out;
    @if $white-text == false {
      color: #606062;
    } @else {
      color: #ffffff;
    }
    &:hover {
      color: #{$bg-color} !important;
      @if $white-text == false {
        background-color: #606062 !important;
      } @else {
        background-color: #f7f7fa !important;
      }
    }
  }
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }

  50% {
    opacity: 0.5;
  }
}
